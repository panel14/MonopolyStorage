// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonopolyStorage.DataAccess.Database.Context;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MonopolyStorage.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250602201245_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MonopolyStorage.Domain.Repositories.Entities.BoxEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("Depth")
                        .HasColumnType("double precision");

                    b.Property<DateOnly?>("ExpirationDate")
                        .HasColumnType("date");

                    b.Property<double>("Height")
                        .HasColumnType("double precision");

                    b.Property<Guid?>("PalletId")
                        .HasColumnType("uuid");

                    b.Property<DateOnly?>("ProductionDate")
                        .HasColumnType("date");

                    b.Property<double>("Volume")
                        .HasColumnType("double precision");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.Property<double>("Width")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("PalletId");

                    b.ToTable("Boxes", t =>
                        {
                            t.HasCheckConstraint("ValidDepth", "\"Depth\" > 0");

                            t.HasCheckConstraint("ValidHeight", "\"Height\" > 0");

                            t.HasCheckConstraint("ValidWidth", "\"Width\" > 0");
                        });
                });

            modelBuilder.Entity("MonopolyStorage.Domain.Repositories.Entities.PalletEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("Depth")
                        .HasColumnType("double precision");

                    b.Property<DateOnly?>("ExpirationDate")
                        .HasColumnType("date");

                    b.Property<double>("Height")
                        .HasColumnType("double precision");

                    b.Property<DateOnly?>("ProductionDate")
                        .HasColumnType("date");

                    b.Property<double>("Volume")
                        .HasColumnType("double precision");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.Property<double>("Width")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Pallets", t =>
                        {
                            t.HasCheckConstraint("ValidDepth", "\"Depth\" > 0");

                            t.HasCheckConstraint("ValidHeight", "\"Height\" > 0");

                            t.HasCheckConstraint("ValidWidth", "\"Width\" > 0");
                        });
                });

            modelBuilder.Entity("MonopolyStorage.Domain.Repositories.Entities.BoxEntity", b =>
                {
                    b.HasOne("MonopolyStorage.Domain.Repositories.Entities.PalletEntity", "Pallet")
                        .WithMany("Boxes")
                        .HasForeignKey("PalletId");

                    b.Navigation("Pallet");
                });

            modelBuilder.Entity("MonopolyStorage.Domain.Repositories.Entities.PalletEntity", b =>
                {
                    b.Navigation("Boxes");
                });
#pragma warning restore 612, 618
        }
    }
}
